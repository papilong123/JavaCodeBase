spring:
  kafka:
    bootstrap-servers: 192.168.3.15:9092
    producer:
#      批量大小
      batch-size: 4096
#      生产端缓冲区大小
      buffer-memory: 40960
#      Kafka提供的序列化和反序列化类
      key-serializer: org.apache.kafka.common.serialization.StringDeserializer
      value-serializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        # 提交延时
        # 当生产端积累的消息达到batch-size或接收到消息linger.ms后,生产者就会将消息提交给kafka
        # linger.ms为0表示每接收到一条消息就提交给kafka,这时候batch-size其实就没用了
        linger:
          ms: 0
#        自定义分区器
#        partitioner.class: com.felix.kafka.producer.CustomizePartitioner
        spring:
          json:
            type:
              mapping: foo:com.lzx.kafka.entity.Foo,bar:com.lzx.kafka.entity.Bar
#      开启事务
#      transaction-id-prefix: tx.
#      重试次数
#      retries: 0

    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: true
      auto-commit-interval: 100
      # 批量消费每次最多消费多少条消息
      max-poll-records: 100
      auto-offset-reset: earliest
#      手动ack
#      enable-auto-commit: false

    listener:
      concurrency: 2
      # 设置批量消费,与max-poll-records配合使用
      type: batch
  #      手动ack
#      ack-mode: manual
  jmx:
    enabled: false
server:
  port: 18888
